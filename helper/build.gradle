plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //rxHttp
    api "com.ljx.rxhttp:rxhttp:$rxhttp_version"
    api "com.squareup.okhttp3:okhttp:$okhttp_version"
    kapt "com.ljx.rxhttp:rxhttp-compiler:$rxhttp_compiler_version"
    api "com.ljx.rxlife:rxlife-coroutine:$rxlife_coroutine_version"

    api "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    api "androidx.cardview:cardview:$cardview_version"
    api "androidx.core:core-ktx:$core_ktx_version"
    api "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    api "androidx.viewpager2:viewpager2:$viewpager_version"
    api "com.google.android.material:material:$material_version"
    // 协程基础库
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    //lifecycle
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // viewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // liveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //Toast
    api "com.hjq:toast:$toast_version"
    //material-dialog
    api "com.afollestad.material-dialogs:core:$material_dialogs_version"
    //log
    api "com.github.zhaokaiqiang.klog:library:$klog_version"
    //万能adapter
    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:${adapter_version}"
    //启动优化异步加载
    api "com.effective.android:anchors:${anchors_version}"
    //微信开源项目，替代SP
    api "com.tencent:mmkv:${mmkv_version}"
    //状态栏
    api "com.gyf.immersionbar:immersionbar:${immersionbar_version}"
    api "com.gyf.immersionbar:immersionbar-ktx:${immersionbar_version}"
    //刷新头
    api "com.scwang.smart:refresh-layout-kernel:${smartrefresh_version}"
    api "com.scwang.smart:refresh-header-classics:${smartrefresh_version}"
    //利用liveData发送消息
    api "com.kunminx.archi:unpeek-livedata:${unpeek_livedata_version}"
    //通过标签直接生成shape，无需再写shape.xml
    api "com.noober.background:core:${background_version}"
    //提供下载图片功能
    api "com.github.bumptech.glide:glide:$glide_version"
    //XPoup
    api "com.lxj:xpopup:$xopou_version"
    //管理界面状态
    api "com.kingja.loadsir:loadsir:$loadsir_version"
}